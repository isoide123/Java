        //创建一个原始的二维数组，11*11，0表示没有子，1表示黑子，2表示蓝子
        int[][] chessArr1 = new int[11][11];
        chessArr1[1][2] = 1;
        chessArr1[2][3] = 2;
        //输出
        for (int[] row : chessArr1) {
            for(int col : row) {
                System.out.printf("%d\t",col);
            }
            System.out.println();
        }

        //将二维数组转化成稀疏数组
        /**
         * 1.遍历创建的二维数组
         * 2.求出有效数据个数
         */
        int sum = 0;
        for(int i = 0;i < 11;i++){
            for(int j = 0;j < 11;j++){
                if(chessArr1[i][j] != 0){
                    sum++;
                }
            }
        }
        System.out.println(sum);

        //2.创建稀疏数组
        int[][] sparseArr = new int[sum+1][3];
        // 给稀疏数组赋值
        sparseArr[0][0] = 11;
        sparseArr[0][1] = 11;
        sparseArr[0][2] = sum;

        //遍历二维数组，将非0的值存入稀疏数组
        int count = 0; //用于记录第几个非0数据
        for(int i = 0;i < 11;i++){
            for(int j = 0;j < 11;j++){
                if(chessArr1[i][j] != 0){
                    count++;
                    //第一列是行。第二列是列
                    sparseArr[count][0] = i;
                    sparseArr[count][1] = j;
                    sparseArr[count][2] = chessArr1[i][j];
                }
            }
        }

        System.out.println();

        System.out.println("得到的稀疏数组为： ");
        for(int i = 0;i < sparseArr.length;i++){
            System.out.printf("%d\t%d\t%d\t\n",sparseArr[i][0],sparseArr[i][1],sparseArr[i][2]);
        }
        System.out.println();

        /**
         * 将稀疏数组恢复成二维数组
         */
        int[][] chessArr2 = new int[sparseArr[0][0]][sparseArr[0][1]];
        //如果此时输出，由于啥子机制，会全部为0，
        for(int i = 1;i < sparseArr.length;i++){
            chessArr2[sparseArr[i][0]][sparseArr[i][1]] = sparseArr[i][2];
        }

        System.out.println("转回去后的输出数组");
        for (int[] row : chessArr2) {
            for(int col : row) {
                System.out.printf("%d\t",col);
            }
            System.out.println();
        }
    }